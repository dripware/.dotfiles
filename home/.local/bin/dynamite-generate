#!/usr/bin/env bash
# this script uses imagemagick to generate different new wallpapers from source wallpapers
# source wallpapers are merged using imagemagick and converted into a inter-state frame
# the result is wallpapers which show different times of the day

LEN=100
STEP=2
TOTAL=$(( $LEN / $STEP * 4))

SOURCEDIR=${XDG_DATA_HOME:-~/.local/share}/dynamite/bg
OUTDIR=${XDG_CACHE_HOME:-~/.cache}/dynamite/out
MORNING=$SOURCEDIR/morning.jpg
DAY=$SOURCEDIR/day.jpg
EVENING=$SOURCEDIR/evening.jpg
NIGHT=$SOURCEDIR/night.jpg

mkdir $OUTDIR -p

update_progress(){
	echo -ne "\033[2K\rGenerating Wallpapers... $(( ( $(ls $OUTDIR -l | wc -l ) -1 ) * 100 / $TOTAL ))%" >&2
}
rm -rf $OUTDIR
mkdir $OUTDIR &> /dev/null

# this function takes two of the images as arguments and generates the inter-state frames based on pictures
# at the beggining the first image (PIC1) is completely visible and the second image (PIC2) is completely
# transparent. but as $i gets bigger PIC1 will become less visible and PIC2 will become more visible
# PIC1-0.jpg -> highest PIC1 and lowest PIC2 visibility
# PIC1-50.jpg -> same visibility for PIC1 and PIC2
# PIC1-100.jpg -> lowest PIC1 and highest PIC2 visiblity
gen_loop(){
	PIC1="$1"
	PIC2="$2"
	PIC1_NAME=$(basename $PIC1 .jpg)
	i=0
	while (( $i < $LEN/2 )); do
		FILENAME="$PIC1_NAME-$i.jpg"
		magick convert $PIC1 \( $PIC2 -alpha set -channel A -evaluate set $((i * 2))% \) -compose lighten -composite $OUTDIR/$FILENAME
		update_progress
		i=$(($i + ( $STEP ) ))
	done
	while (( $i < $LEN )); do
		FILENAME="$PIC1_NAME-$i.jpg"
		magick convert $PIC2 \( $PIC1 -alpha set -channel A -evaluate set $(( 100 - (i - LEN/2) * 2 ))% \) -compose lighten -composite $OUTDIR/$FILENAME
		update_progress
		i=$(($i + ( $STEP ) ))
	done
}

# generates inter-state frames in 4 processes to make it faster
gen_loop $MORNING $DAY |
(sleep 0.5 && gen_loop $DAY $EVENING) |
(sleep 1 && gen_loop $EVENING $NIGHT) |
(sleep 1.5 && gen_loop $NIGHT $MORNING)
